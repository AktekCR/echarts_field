<?php

/**
 * Implementation of hook_field_info()
 */
function echarts_field_field_info() { 

  return array( 
    'echarts_json_field' => array( 
      'label' => t('ECharts field'), 
      'description' => t('Implementation of Echart library on a field'),
      'default_widget' => 'echarts_json_field_widget',
      'default_formatter' => 'poutine_maker_poutine_formatter',
    ),
  );
}


/**
 * Implementation of hook_field_widget_info()
 */
function echarts_field_field_widget_info() {
  
  return array(
    'echarts_json_field_widget' => array(
      'label' => t('EChart JSON field'),
      'field types' => array('echarts_json_field'),
    ),
  );

}


/**
 * Implements hook_field_widget_form()
 */
function echarts_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element){

  $field_name = $instance['field_name'];
  $required = $element['#required'];
  $item = &$items[$delta];

  $element += array(
    '#type' => 'fieldset',
  );

  $element['graph_type'] = array(
    '#title' => t('Graph type'),
    '#type' => 'select',
    '#required' => $required,
    '#options' => echarts_load_types(),
    '#default_value' => isset($items[$delta]['graph_type']) ? $items[$delta]['graph_type'] : '',
  );

  $element['json_url'] = array(
    '#title' => t('JSON URL'),
    '#type' => 'textfield',
    '#required' => $required,
    '#default_value' => isset($items[$delta]['json_url']) ? $items[$delta]['json_url'] : '',
  );

  $element['json_structure'] = array(
    '#title' => t('JSON Structure'),
    '#type' => 'textfield',
    '#required' => $required,
    '#default_value' => isset($items[$delta]['json_structure']) ? $items[$delta]['json_structure'] : '',
  );
  $element['axis_x'] = array(
    '#title' => t('JSON key field name'),
    '#type' => 'textfield',
    '#required' => $required,
    '#default_value' => isset($items[$delta]['axis_x']) ? $items[$delta]['axis_x'] : '',
  );

  $element['series'] = array(
    '#title' => t('Data Series (separated by a comma)'),
    '#type' => 'textfield',
    '#required' => $required,
    '#default_value' => isset($items[$delta]['series']) ? $items[$delta]['series'] : '',
  );

  $element['series_x'] = array(
    '#title' => t('x-axis (separated by a comma)'),
    '#type' => 'textfield',
    '#required' => $required,
    '#default_value' => isset($items[$delta]['series_x']) ? $items[$delta]['series_x'] : '',
  );

  $element['max_y'] = array(
    '#title' => t('Max y-axis value (For radial charts)'),
    '#type' => 'textfield',
    '#default_value' => isset($items[$delta]['max_y']) ? $items[$delta]['max_y'] : '',
  );

  return $element;

}


/**
*Implements hook_form_alter()
*
**/
function echarts_field_field_widget_form_alter(&$element, &$form_state, &$context)
{
	drupal_add_js(drupal_get_path('module', 'echarts_field') . '/js/echarts_field.js', 'file');
}


/**
 * Implements hook_field_is_empty().
 */
function echarts_field_field_is_empty($item, $field) {

  if ( empty($item['json_url']) ) {
    return TRUE;
  }

  return FALSE;

}


/**
 * Implements hook_field_formatter_info().
 */
function echarts_field_field_formatter_info() {
  
  return array(
    'echarts_json_field_graph' => array(
      'label' => t('Default ECharts'),
      'field types' => array('echarts_json_field'),
    ),
  );

}


/**
 * Implements hook_field_formatter_view().
 */
function echarts_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display){

  $element = array();
  switch ($display['type']) {
  case 'echarts_json_field_graph':
    $format_field = 'echarts_field_json_graph';//echarts_field_json_field_graph_format';
    break; 
  }

  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#markup' => theme($format_field, array('item' => $item)),
    );
  }
  return $element;
}


/**
 * Implements hook_theme()
 */
function echarts_field_theme(){

  return array(
    'echarts_field_json_graph' => array(
      'template' => 'theme/echarts_field_json_graph',
      'variables' => array(
        'item' => array(),
      ),
    ),
  );

}


/**
 * Implements custom template_preprocess
 */
function template_preprocess_echarts_field_json_graph(&$vars){

  module_load_include('inc', 'echarts_field', 'includes/echarts_field');
  $item = &$vars['item'];

  $output = '';
  $graph_settings = array();
  $graph_type = $item['graph_type'];
  $series = explode(',',trim($item['series']));
  $series_x = $item['series_x'];
  $json_structure = explode('-',trim($item['json_structure']));
  $json_data = file_get_contents($item['json_url']);
  $json_data = preg_replace('/"\s/', '"', $json_data);
  $json_data = preg_replace('/\s"/', '"', $json_data);

  $json_array = json_decode($json_data);
  
  foreach ($json_structure as $key => $value) {
     $json_tmp = $json_array->$value;
     $json_array = $json_tmp; 
  }
  $nameG = hash('MD5',microtime(true));
  
  switch ($graph_type) {
    case 'line':
      $series_x = explode(',',trim($series_x));
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_bar_line_graph($json_array, $item['axis_x'], $series, 'line',$series_x, '');
      break;
   case 'bar':
      $series_x = explode(',',trim($series_x));
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_bar_line_graph($json_array, $item['axis_x'], $series, 'bar',$series_x, '');
    break;
  case 'pie':
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_pie_funnel_graph($json_array, $item['axis_x'],$series,'pie', $series_x, '');
    break;
  case 'funnel':
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_pie_funnel_graph($json_array, $item['axis_x'],$series,'funnel', $series_x, '');
    break;
  case 'radar':
      $max_y = $item['max_y'];  
      $series_x = explode(',',trim($series_x));
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_radar_graph($json_array, $item['axis_x'],$series,'radar', $series_x, $max_y ,'');
    break;
  case 'treemap':
      $graph_settings['echart'][$nameG] = echarts_field_generate_settings_treemap_graph($json_array, $item['axis_x'],$series,'treemap', $series_x, '');
    break;
  default:
      $output = '<h3>' . t('This kind of graph is not implemented yet') . '</h3>';
    break;
  }
  
  $vars['graph'] = render_echarts($graph_settings);
}


